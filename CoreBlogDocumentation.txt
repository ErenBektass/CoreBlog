1 => Proje N-Tier mimari paternine göre yazýlacaktýr.

2 => Projede açýlacak katmanlar
ENTITIES,
DAL,
BLL,
API - UI (Projemizi dýþarý açmak istedigimiz için açtýðýmýz ayrý bir katmandýr),
CoreBlog(MVC olarak düþünülmüþtür)

3 => Katman isimleri Project ile baslayarak . sembolünden sonra katmansal takýlarla bitecektir(Project.ENTITIES vs...)

4 => Projede deðiþken isimleri degiþkenler local variable oldugu sürece camelCase, field oldugu sürece basýnda _ sembolü olmak üzere camelCase; Property, metot ve class isimleri PascalCase standartlarýnda yazýlacaktýr ve projede Türkçe karakter kullanýlmayacaktýr. CLass isimleri kesinlikle cogul olmayacaktýr.

Projede Kullanýlan Kütüphaneler ve Teknolojiler

* Proje Asp.Net Core 7.0  ile yazýlmýþtýr.
* Entity Framework Repository oluþturuldu.
* Partial View ve Await Async kullanýldý.
* Include Metodu ve Eager Load kullanýldý.
* View Component kullanýldý.
* Httpget Ve Httppost Attributeleri kullanýldý.
* Fluent Validation iþlemleri yapýldý.
* Authentication Ve Controller seviyesinde Authorize yapýldý.
* Session yönetimi gerçekleþtirildi.
* Parametreli Trigger Kullanýmý.
* Dinamik ve Statik raporlar oluþturulup Excel formatýna dönüþtürülebilmesi saðlandý.
* Api Üzerinden Hava Durumu Bilgisi Çekme iþlemleri yapýldý.
* Ajax ile Ekleme,Silme,Güncelleme iþlemleri yapýldý.
* Swagger ile API dökümantasyonu oluþturuldu.
* Identity Ýle Giriþ Yapan Kullanýcýlarýn bilgilerini Getirme iþlemleri yapýldý.
* JsonWebToken Postman üzerinde token oluþturma iþlemleri yapýldý.
